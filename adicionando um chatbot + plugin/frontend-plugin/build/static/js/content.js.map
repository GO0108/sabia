{"version":3,"file":"static/js/content.js","mappings":"yBAAO,IAAKA,EAAM,SAANA,GAAM,OAANA,EAAAA,EAAM,iBAANA,EAAAA,EAAM,qBAANA,CAAM,MCYZC,EAA+B,SACnCC,EACAC,EACAC,GAEA,IAAMC,EAZe,SACrBH,EACAC,GAEA,OAAOA,EAAOG,KAAOC,OAAOC,QAAQF,IAAMJ,EAAQO,OAAST,EAAOU,KACpE,CAOsBC,CAAeT,EAASC,GAM5C,GAJIE,GAAmC,qBAApBH,EAAQA,SACzBE,EAAS,yBAGPC,GAAmC,gBAApBH,EAAQA,QAA2B,CAAC,IAADU,EAC9CC,EAAOC,SAASC,eAAe,UACjC,OAAJF,QAAI,IAAJA,GAAmB,QAAfD,EAAJC,EAAMG,qBAAa,IAAAJ,GAAnBA,EAAqBK,YAAYJ,EACnC,CACF,EAGEK,QAAQC,IAAI,qBAIZZ,OAAOC,QAAQY,UAAUC,YAAYpB,E","sources":["types.ts","chrome/content.ts"],"sourcesContent":["export enum Sender {\r\n    React,\r\n    Content\r\n}\r\n\r\nexport interface ChromeMessage {\r\n    from: Sender,\r\n    message: any\r\n}","\r\nimport { ChromeMessage, Sender } from \"../types\";\r\n\r\ntype MessageResponse = (response?: any) => void;\r\n\r\nconst validateSender = (\r\n  message: ChromeMessage,\r\n  sender: chrome.runtime.MessageSender\r\n) => {\r\n  return sender.id === chrome.runtime.id && message.from === Sender.React;\r\n};\r\n\r\nconst messagesFromReactAppListener = (\r\n  message: ChromeMessage,\r\n  sender: chrome.runtime.MessageSender,\r\n  response: MessageResponse\r\n) => {\r\n  const isValidated = validateSender(message, sender);\r\n\r\n  if (isValidated && message.message === \"Hello from React\") {\r\n    response(\"Hello from content.js\");\r\n  }\r\n\r\n  if (isValidated && message.message === \"delete logo\") {\r\n    const logo = document.getElementById(\"hplogo\");\r\n    logo?.parentElement?.removeChild(logo);\r\n  }\r\n};\r\n\r\nconst main = () => {\r\n  console.log(\"[content.ts] Main\");\r\n  /**\r\n   * Fired when a message is sent from either an extension process or a content script.\r\n   */\r\n  chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\r\n};\r\n\r\nmain();"],"names":["Sender","messagesFromReactAppListener","message","sender","response","isValidated","id","chrome","runtime","from","React","validateSender","_logo$parentElement","logo","document","getElementById","parentElement","removeChild","console","log","onMessage","addListener"],"sourceRoot":""}